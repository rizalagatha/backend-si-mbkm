// Skema Prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Sesuaikan dengan database yang kamu gunakan
  url      = env("DATABASE_URL")
}

// Model untuk Tabel AdminSiap
model AdminSiap {
  NIP_admin_siap  BigInt          @id
  nama_admin_siap String
  KonversiNilai   KonversiNilai[]
}

// Model untuk Tabel BerkasPenilaian
model BerkasPenilaian {
  id_berkas_penilaian Int    @id @default(autoincrement())
  id_pendaftaran_mbkm Int
  nama_berkas         String

  PendaftaranMbkm PendaftaranMbkm @relation(fields: [id_pendaftaran_mbkm], references: [id_pendaftaran_mbkm])
  KonversiNilai   KonversiNilai[]
}

// Model untuk Tabel Categories
model Categories {
  id   String @id
  name String

  ProgramMbkm ProgramMbkm[]
}

// Model untuk Tabel Dosbing
model Dosbing {
  NIP_dosbing     BigInt            @id
  nama_dosbing    String
  Mahasiswa       Mahasiswa[]
  PendaftaranMbkm PendaftaranMbkm[]
}

// Model untuk Tabel KonversiNilai
model KonversiNilai {
  id_konversi_nilai   Int    @id @default(autoincrement())
  NIP_admin_siap      BigInt
  id_berkas_penilaian Int
  nilai_akhir         Int
  grade               String

  AdminSiap       AdminSiap       @relation(fields: [NIP_admin_siap], references: [NIP_admin_siap])
  BerkasPenilaian BerkasPenilaian @relation(fields: [id_berkas_penilaian], references: [id_berkas_penilaian])
}

// Model untuk Tabel KoorMbkm
model KoorMbkm {
  NIP_koor_mbkm   BigInt            @id
  nama_koor_mbkm  String
  PendaftaranAkun PendaftaranAkun[]
  PendaftaranMbkm PendaftaranMbkm[]
  Pengumuman      Pengumuman[]
}

// Model untuk Tabel Mahasiswa
model Mahasiswa {
  NIM             BigInt @id
  nama_mahasiswa  String
  semester        Int
  id_program_mbkm Int
  NIP_dosbing     BigInt

  ProgramMbkm     ProgramMbkm       @relation(fields: [id_program_mbkm], references: [id_program_mbkm])
  Dosbing         Dosbing           @relation(fields: [NIP_dosbing], references: [NIP_dosbing])
  PendaftaranMbkm PendaftaranMbkm[]
  PendaftaranAkun PendaftaranAkun[] // Tambahkan relasi untuk menghubungkan dengan PendaftaranAkun
}

// Model untuk Tabel PendaftaranAkun
model PendaftaranAkun {
  id_pendaftaran_akun Int      @id @default(autoincrement())
  NIM                 BigInt
  NIP_koor_mbkm       BigInt
  tanggal             DateTime

  Mahasiswa Mahasiswa @relation(fields: [NIM], references: [NIM])
  KoorMbkm  KoorMbkm  @relation(fields: [NIP_koor_mbkm], references: [NIP_koor_mbkm])
}

// Model untuk Tabel PendaftaranMbkm
model PendaftaranMbkm {
  id_pendaftaran_mbkm Int      @id @default(autoincrement())
  NIM                 BigInt
  NIP_dosbing         BigInt
  NIP_koor_mbkm       BigInt
  tanggal             DateTime

  Mahasiswa       Mahasiswa         @relation(fields: [NIM], references: [NIM])
  Dosbing         Dosbing           @relation(fields: [NIP_dosbing], references: [NIP_dosbing])
  KoorMbkm        KoorMbkm          @relation(fields: [NIP_koor_mbkm], references: [NIP_koor_mbkm])
  BerkasPenilaian BerkasPenilaian[]
}

// Model untuk Tabel Pengumuman
model Pengumuman {
  id_pengumuman Int      @id @default(autoincrement())
  judul         String
  isi           String
  tanggal       DateTime
  NIP_koor_mbkm BigInt

  KoorMbkm KoorMbkm @relation(fields: [NIP_koor_mbkm], references: [NIP_koor_mbkm])
}

// Model untuk Tabel ProgramMbkm
model ProgramMbkm {
  id_program_mbkm Int       @id @default(autoincrement())
  company         String
  deskripsi       String?
  role            String?
  status          String?
  date            DateTime?
  category_id     String

  Categories Categories  @relation(fields: [category_id], references: [id])
  Mahasiswa  Mahasiswa[]
}

// Model untuk User dengan Hash Password
model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role

  @@map("User")
}

enum Role {
  koor_mbkm
  admin_siap
  dosbing
  mahasiswa
}
